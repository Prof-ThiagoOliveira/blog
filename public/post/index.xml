<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Researcher</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sat, 04 Jul 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>Main elements and questions of a good experimental plan.</title>
      <link>/2020/06/main-elements-and-questions-of-a-good-experimental-plan./</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/2020/06/main-elements-and-questions-of-a-good-experimental-plan./</guid>
      <description>&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it ðŸ™Œ&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>The seven steps of a programer</title>
      <link>/2020/07/the-seven-steps-of-a-programer/</link>
      <pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/2020/07/the-seven-steps-of-a-programer/</guid>
      <description>


&lt;div class=&#34;div-1&#34;&gt;
&lt;div class=&#34;header1&#34;&gt;
&lt;h1 id=&#34;overview-of-the-seven-steps&#34;&gt;Overview of the Seven Steps&lt;/h1&gt;
&lt;/div&gt;
&lt;p&gt;The seven steps proposed by Hilton et al.Â (2019) is very interesting strategy to start a new project that involves programming process, where a summary of the entire process is shown in the Figure 1. Here we will describe these steps based on thw work of Hilton et al.Â (2019).&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-1&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;seven_steps.png&#34; alt=&#34;The seven steps (modified from Hilton et al. (2019))&#34; width=&#34;684&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: The seven steps (modified from Hilton et al.Â (2019))
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;All steps are then described in the sections below.&lt;/p&gt;
&lt;div class=&#34;header1&#34;&gt;
&lt;h1 id=&#34;step-1---project-definition-using-simple-examples&#34;&gt;Step 1 - Project definition using simple examples&lt;/h1&gt;
&lt;/div&gt;
&lt;p&gt;This is the moment where you spend time thinking about the project and how could you divide them into small tasks. Start your project drawing a diagram of it by hand, including the main subjects, how you could sorted out the problems, and how many main algorithms should you create to have your project done. Here you may include how the project could be sub-divided in smaller tasks, how this tasks are connected, and if there is an order to execute them (Figure 2). Consequently, this should reflect in the number of main algorithms to be build. Doing a good job during this stage will facilitate the remainder steps.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-2&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;main_project.png&#34; alt=&#34;Example of how divide the main project into small tasks&#34; width=&#34;557&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Example of how divide the main project into small tasks
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;header2&#34;&gt;
&lt;h2 id=&#34;example-1&#34;&gt;Example 1&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;Suppose we would want to write an algorithm in C++ to compute the total fat of a ice cream portion basis (&lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;). Suppose also this response variable is a function of butyric fat &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt; and vegetable fat &lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt;. Let &lt;span class=&#34;math inline&#34;&gt;\(E[y]\)&lt;/span&gt; be the expected value of &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; defined as&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[E[y]=10-0.5x_1+0.6x_1^2-0.6x_2+0.2x_2^2+0.1x_1x_2\]&lt;/span&gt;
Thus, we can pick particular values for &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt;, and &lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt; to calculate the total fat &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt; by hand. If &lt;span class=&#34;math inline&#34;&gt;\(x_{1}=2\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(x_{2}=1\)&lt;/span&gt;, then
&lt;span class=&#34;math display&#34;&gt;\[y=10-0.5\times2+0.6\times 2^2-0.6\times 1+0.2 \times 1^2+0.1\times 2 \times 1 = 11.2.\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now, suppose the the second aim is the optimization of reduction in fat ice cream formulation from this fitted model. In this sense, we are looking for the global minimum through the response surface, consequently, we can divide our project into, e. g., two tasks:&lt;/p&gt;
&lt;div class=&#34;div-2&#34;&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Generalize the function for any &lt;span class=&#34;math inline&#34;&gt;\(x_1\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(x_2\)&lt;/span&gt;;&lt;/li&gt;
&lt;li&gt;Calculate the global (or absolute) minimum point;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;p&gt;If you get stuck in one of these steps, probably this difficult is comming from a lack of domain knowledge of a particular field, e. g., a lack of domain in mathematics:&lt;/p&gt;
&lt;div class=&#34;div-2&#34;&gt;
&lt;ul&gt;
&lt;li&gt;How could I calculate the global minimum?&lt;/li&gt;
&lt;li&gt;How can I use partial derivatives?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Thus, during this step you have to identify all lack of domain knowledge and then overcome them before going to the next step. Sometimes, domain knowledge may come from particular fields of computer science, sports, agriculture, statistics, or engineering.&lt;/p&gt;
&lt;div class=&#34;header1&#34;&gt;
&lt;h1 id=&#34;step-2---write-everything-you-did&#34;&gt;Step 2 - Write everything you did&lt;/h1&gt;
&lt;/div&gt;
&lt;p&gt;In this step you should take notes about what you did to solve the project or tasks within the project. Your notes describing all solutions by task should be precisely enough to anyone else reproduce them easily. Sometimes we may omit common sense steps such as multiply &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; by &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;, or the order in which each task should be executed.&lt;/p&gt;
&lt;div class=&#34;header2&#34;&gt;
&lt;h2 id=&#34;example-2&#34;&gt;Example 2&lt;/h2&gt;
&lt;/div&gt;
&lt;p&gt;Suppose we are interested in computing &lt;span class=&#34;math inline&#34;&gt;\(f(x,y)=x^y+3x\)&lt;/span&gt; when &lt;span class=&#34;math inline&#34;&gt;\(x=2\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(y=4\)&lt;/span&gt;, then we might write down a deatiled descriptions of all steps to compute &lt;span class=&#34;math inline&#34;&gt;\(f(x,y)\)&lt;/span&gt;:&lt;/p&gt;
&lt;div class=&#34;div-2&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Multiply 2 by 2 &lt;span class=&#34;math inline&#34;&gt;\(\rightarrow\)&lt;/span&gt; you get 4&lt;/li&gt;
&lt;li&gt;Multiply 4 by 2 &lt;span class=&#34;math inline&#34;&gt;\(\rightarrow\)&lt;/span&gt; you get 8&lt;/li&gt;
&lt;li&gt;Multiply 8 by 2 &lt;span class=&#34;math inline&#34;&gt;\(\rightarrow\)&lt;/span&gt; you get 16&lt;/li&gt;
&lt;li&gt;Sum 16 plus 3 multiplied by 2 &lt;span class=&#34;math inline&#34;&gt;\(\rightarrow\)&lt;/span&gt; you get 22&lt;/li&gt;
&lt;li&gt;22 is the answer.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;The steps are precise as anyone who can perform basic math can follow these steps to get the same answer.&lt;/p&gt;
&lt;div class=&#34;header1&#34;&gt;
&lt;h1 id=&#34;step-3---generalize&#34;&gt;Step 3 - Generalize&lt;/h1&gt;
&lt;/div&gt;
&lt;p&gt;Our task now is generalize the last steps into an algorithm, finding patterns that allows us to solve the whole class rather than for a particular parameter values. Here is two common way to generalize those steps into algorithm:&lt;/p&gt;
&lt;div class=&#34;div-2&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Look all details of your step 2 because, sometimes, you can find the generalization into it description.&lt;/li&gt;
&lt;li&gt;Look for repetition patterns - when the same step repeats several times&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
We can, e. g., generalize our &lt;strong&gt;Example 2&lt;/strong&gt; just looking the description into step 2, where we can replacing the occurence of 2 by &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt;:
&lt;div class=&#34;div-2&#34;&gt;
&lt;ul&gt;
&lt;li&gt;Multiply 2 by &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(\rightarrow\)&lt;/span&gt; you get 4&lt;/li&gt;
&lt;li&gt;Multiply 4 by &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(\rightarrow\)&lt;/span&gt; you get 8&lt;/li&gt;
&lt;li&gt;Multiply 8 by &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(\rightarrow\)&lt;/span&gt; you get 16&lt;/li&gt;
&lt;li&gt;Sum 16 plus 3 multiplied by &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; &lt;span class=&#34;math inline&#34;&gt;\(\rightarrow\)&lt;/span&gt; you get 22&lt;/li&gt;
&lt;li&gt;22 is the answer.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;Note that, in the first multiplication, we have to start with &lt;span class=&#34;math inline&#34;&gt;\(x \times x=2 \times x = 4\)&lt;/span&gt;, thus the number of times that we should multiply 2 by &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; are &lt;span class=&#34;math inline&#34;&gt;\(y-1\)&lt;/span&gt;. Thus, we would lead to the following generalized steps:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;start with x = 2 and y = 4
n[1] = x

Count up from i in 1 to y-1 
  n[i+1] = n[i] * x 

z = n[y] + 3 * x
z is  the answer&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;div-3&#34;&gt;
&lt;p&gt;This process is referred to as writing â€˜pseudo-codeâ€™ as an algorithm design with no particular target language.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;header1&#34;&gt;
&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;
&lt;/div&gt;
&lt;p align=&#34;justify&#34;&gt;
[1] Hilton, AD; Lipp, GM; Rodger, SH, Translation from Problem to Code in Seven Steps, Comped 2019 Proceedings of the Acm Conference on Global Computing Education (2019), pp.Â 78-84.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Did you find this page helpful? Consider sharing it ðŸ™Œ&lt;/strong&gt;&lt;/p&gt;
&lt;style&gt;
.div-1 {
  text-align: justify;
}
.div-2{
  color: black;
  text-align: justify;
  background-color: #d6edd3;
}
.div-3{
  color: black;
  text-align: justify;
  background-color: #cfbe7e;
}
.header1 h1{
font-style: normal;
color: #2283f2;
}
.header2 h2{
font-style: normal;
color: #3b80d1;
}
&lt;/style&gt;
</description>
    </item>
    
  </channel>
</rss>
