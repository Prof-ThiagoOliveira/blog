<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>I Workshop in introduction of experimental design | Thiago Oliveira</title>
    <link>https://prof-thiagooliveira.netlify.com/courses/2019_workshop/</link>
      <atom:link href="https://prof-thiagooliveira.netlify.com/courses/2019_workshop/index.xml" rel="self" type="application/rss+xml" />
    <description>I Workshop in introduction of experimental design</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2021 Thiago Oliviera</copyright><lastBuildDate>Mon, 27 Aug 2018 09:00:00 +0000</lastBuildDate>
    <image>
      <url>https://prof-thiagooliveira.netlify.com/courses/2019_workshop/featured.jpg</url>
      <title>I Workshop in introduction of experimental design</title>
      <link>https://prof-thiagooliveira.netlify.com/courses/2019_workshop/</link>
    </image>
    
    <item>
      <title>R Code</title>
      <link>https://prof-thiagooliveira.netlify.com/courses/2019_workshop/visualization/</link>
      <pubDate>Mon, 27 Aug 2018 09:00:00 +0000</pubDate>
      <guid>https://prof-thiagooliveira.netlify.com/courses/2019_workshop/visualization/</guid>
      <description>&lt;p&gt;R code containing the basics on how to randomize an experiment.&lt;/p&gt;
&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;
&lt;p&gt;Example of a completely randomized design.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;############################################################################
#################### Completely Randomized Design ##########################
############################################################################

# Type of Rootstock
Trat &amp;lt;- gl(5,1,labels = c(&amp;quot;P1&amp;quot;, &amp;quot;P2&amp;quot;, &amp;quot;P3&amp;quot;, &amp;quot;P4&amp;quot;, &amp;quot;Controle&amp;quot;)) 

# Repetitions
Rep &amp;lt;-  5 


# Draw of treatments to plots
DIC &amp;lt;- function(Trat,Rep){
  Trat &amp;lt;- rep(Trat,Rep)
  N &amp;lt;- length(levels(Trat))*Rep # Número total de parcelas
  Plan&amp;lt;-as.data.frame(
    matrix(
      sample(Trat,N), ncol = length(levels(Trat)), nrow=Rep
      )
    )
  colnames(Plan)&amp;lt;-paste(&amp;quot;Coluna&amp;quot;, c(seq(1:length(levels(Trat)))))
  rownames(Plan)&amp;lt;-paste(&amp;quot;Linha&amp;quot;, c(seq(1:Rep)))
  return(Plan)
}

# Experiment Sketch
DIC(Trat,Rep)

&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h1&gt;
&lt;p&gt;Example of a Randomized Block Design.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;############################################################################
################### Randomized Block Design ################################
############################################################################

# A researcher wishes to evaluate the color, odor and consistency of ruminal
# juice samples from cattle of same breed, who are treated with 3 types of 
# feeds. As a restriction ofexperiment implementation, we can confine up to 
# 4 cattle per sector and the maximum number of sectors available is 5. 
# In addition, those animals were classified into three groups of carcasses: 
# i) light (226-228 kg), ii) medium (241-243 kg) and iii) higher (259-261 Kg).
                            
# Feed
Trat &amp;lt;- gl(3,1,labels = c(&amp;quot;Ração 1&amp;quot;, &amp;quot;Ração 2&amp;quot;, &amp;quot;Ração 3&amp;quot;)) 

# Number of Blocks - carcass groups
Bloco &amp;lt;- gl(5,1,labels = c(&amp;quot;Bloco I&amp;quot;, &amp;quot;Bloco II&amp;quot;, &amp;quot;Bloco III&amp;quot;, 
                           &amp;quot;Bloco IV&amp;quot;, &amp;quot;Bloco V&amp;quot;))

# Total number of plots
N &amp;lt;- length(levels(Trat))*length(levels(Bloco))

# Draw of treatments to plots within blocks
DCB &amp;lt;- function(Trat,Bloco){
  Trat_Bloco &amp;lt;- list(NA)
    for(i in 1:length(levels(Bloco))){
      Trat_Bloco[[i]]&amp;lt;-matrix(
      sample(Trat,length(levels(Trat))))
    }
  Plan &amp;lt;- do.call(cbind.data.frame, Trat_Bloco)
  colnames(Plan) &amp;lt;- c(levels(Bloco))
  rownames(Plan) &amp;lt;- paste(&amp;quot;Linha&amp;quot;, c(1:length(levels(Trat))))
  return(Plan)
}
# Experiment Sketch
DCB(Trat,Bloco)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;tip-3&#34;&gt;Tip 3&lt;/h1&gt;
&lt;p&gt;Example of a completely randomized designs for factorial structure&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;############################################################################
################## Completely randomized designs ###########################
####################### Factorial structure ################################
############################################################################
# Five soy cultivar
Cultivar &amp;lt;- gl(5,1,labels=c(&amp;quot;BRS 1003IPro&amp;quot;, &amp;quot;BRS 1007IPro&amp;quot;, &amp;quot;BRS 1010IPro&amp;quot;, 
                            &amp;quot;BRS 1074IPro&amp;quot;, &amp;quot;BRS 706IPro&amp;quot;))

# Four nutrient solution with levels of 0.1.2, and 4 mg / liter of manganese.
Solucao &amp;lt;- gl(4,1,labels = c(&amp;quot;0&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;4&amp;quot;))

# Treatments
Trat &amp;lt;- expand.grid(Cultivar = Cultivar, Solução = Solucao)
Trat$Tratamento &amp;lt;- as.factor(paste(Trat$Cultivar,Trat$Solução))
  
# Repetition
Rep &amp;lt;- 10 


# Draw of treatments to plots
DIC &amp;lt;- function(Trat,Rep){
  N &amp;lt;- length(levels(Trat))*Rep # Total number of plots
  Trat &amp;lt;- rep(Trat,Rep)
  Plan &amp;lt;- as.data.frame(
    matrix(
      sample(Trat,N), ncol = Rep, nrow=length(levels(Trat))
      )
    )
  colnames(Plan) &amp;lt;- paste(&amp;quot;Coluna&amp;quot;, c(seq(1:Rep)))
  rownames(Plan) &amp;lt;- paste(&amp;quot;Linha&amp;quot;, c(seq(1:length(levels(Trat)))))
  return(Plan)
}

# Experiment Sketch
DIC(Trat$Tratamento,Rep)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;tip-4&#34;&gt;Tip 4&lt;/h1&gt;
&lt;p&gt;Example of a Latin Square Design&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34;&gt;############################################################################
######################## Latin Square Design ###############################
############################################################################

L1 &amp;lt;- gl(4,1,labels = c(&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;,&amp;quot;D&amp;quot;))
L2 &amp;lt;- gl(4,1,labels = c(&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;,&amp;quot;D&amp;quot;,&amp;quot;A&amp;quot;))
L3 &amp;lt;- gl(4,1,labels = c(&amp;quot;C&amp;quot;,&amp;quot;D&amp;quot;,&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;))
L4 &amp;lt;- gl(4,1,labels = c(&amp;quot;D&amp;quot;,&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;))
Trat &amp;lt;- rbind(paste0(L1),paste0(L2),paste0(L3),paste0(L4))

QL &amp;lt;- function(Trat){
  #Sorteando as linhas
  Linha &amp;lt;- Trat[sample(nrow(Trat),size=ncol(Trat)),]
  Coluna &amp;lt;- Linha[, sample(nrow(Linha),size=ncol(Linha))]
  return(Coluna)
  }
QL(Trat)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
