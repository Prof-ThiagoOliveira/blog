<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R | Thiago Oliveira</title>
    <link>https://prof-thiagooliveira.netlify.com/category/r/</link>
      <atom:link href="https://prof-thiagooliveira.netlify.com/category/r/index.xml" rel="self" type="application/rss+xml" />
    <description>R</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>¬© 2021 Thiago Oliviera</copyright><lastBuildDate>Mon, 02 Oct 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://prof-thiagooliveira.netlify.com/media/icon_hua8192a3d26f52862b6ecd0fa00b0dcdd_44669_512x512_fill_lanczos_center_3.png</url>
      <title>R</title>
      <link>https://prof-thiagooliveira.netlify.com/category/r/</link>
    </image>
    
    <item>
      <title>Navigating the Shiny Universe with Golem</title>
      <link>https://prof-thiagooliveira.netlify.com/post/golem-package/</link>
      <pubDate>Mon, 02 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://prof-thiagooliveira.netlify.com/post/golem-package/</guid>
      <description>


&lt;div id=&#34;the-golem-package&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;The &lt;code&gt;golem&lt;/code&gt; package&lt;/h1&gt;
&lt;p align=&#34;justify&#34;&gt;
In the world of &lt;code&gt;R&lt;/code&gt; programming, Shiny applications let us make interactive web apps using R code. The &lt;code&gt;golem&lt;/code&gt; package (Fay et al.¬†2021) makes it easier to develop these apps. It brings new tools and methods to this area, helping developers handle complex tasks more simply.
&lt;/p&gt;
&lt;div id=&#34;making-things-with-structure&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Making Things with Structure&lt;/h2&gt;
&lt;p align=&#34;justify&#34;&gt;
Think of making a sculpture out of clay. At first, the big lump of clay can be hard to handle. &lt;code&gt;golem&lt;/code&gt; helps developers, like sculptors, by giving them a clear framework. This means instead of dealing with a big, confusing bunch of code, developers have an organized way to work. It is like having lines drawn on the clay, showing where to shape and smooth it.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;modular-component&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Modular Component&lt;/h2&gt;
&lt;p align=&#34;justify&#34;&gt;
When I first stumbled upon the &lt;code&gt;golem&lt;/code&gt; package for R‚Äôs Shiny applications, it was like discovering a secret garden in the world of coding. The stand-out feature for me? Its emphasis on modular coding. Let me break down why this is such a big deal.
&lt;/p&gt;
&lt;p align=&#34;justify&#34;&gt;
Think of building a Shiny app like crafting a beautiful mosaic. Each piece (or module) is unique and serves a specific purpose. When you put them all together, they create a stunning picture - your final application. This modular approach is not just about aesthetics; it is about making your coding life a whole lot easier.
&lt;/p&gt;
&lt;div id=&#34;why-modules-make-all-the-difference&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Why Modules Make All the Difference&lt;/h3&gt;
&lt;p align=&#34;justify&#34;&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Organization&lt;/strong&gt;: Breaking down the app into modules is like having a well-organized toolbox. Everything has its place, and you know exactly where to find it. It is incredibly satisfying and efficient.&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;p align=&#34;justify&#34;&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Teamwork Made Simple&lt;/strong&gt;: If you are working in a team, modules are a lifesaver. Imagine each team member painting their part of a large canvas. With modules, you can work independently on different features without stepping on each other‚Äôs toes.&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;p align=&#34;justify&#34;&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Debugging&lt;/strong&gt;: We have all been there - something is broken, and we have no idea where to start looking. With modular coding, it is like having a map with a big ‚ÄúX‚Äù marking the spot of the problem. A big simplication!&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;p align=&#34;justify&#34;&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Reuse and Recycle&lt;/strong&gt;: I love this part. Created a nifty user authentication module? You can plug it into your next project without reinventing the wheel. It is like having a secret recipe you can use over and over with minor adaptations when needed.&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;p align=&#34;justify&#34;&gt;
&lt;ol start=&#34;5&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Growth Made Easy&lt;/strong&gt;: As your app grows, you can just add new modules. It is like adding new rooms to a house. This scalability is one of most helpful feature for any developer.&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;p align=&#34;justify&#34;&gt;
&lt;ol start=&#34;6&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Testing&lt;/strong&gt;: Testing each module separately means you can be super confident that every part of your app works perfectly before you put it all together.&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;p align=&#34;justify&#34;&gt;
&lt;ol start=&#34;7&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;strong&gt;Newbie-Friendly&lt;/strong&gt;: If someone new joins your project, it is much easier for them to get up to speed with a modular structure. It is like giving them a well-detailed map instead of a single, overwhelming blueprint.&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;a-developers-toolbox&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A Developer‚Äôs Toolbox&lt;/h2&gt;
&lt;p align=&#34;justify&#34;&gt;
&lt;code&gt;golem&lt;/code&gt; is not just about keeping things tidy. It is like a multi-tool for Shiny developers. It helps with JavaScript and CSS, makes app settings simpler, and improves how you work. &lt;code&gt;golem&lt;/code&gt; also manages updates in &lt;code&gt;R&lt;/code&gt;, making sure your app stays stable even when other parts of &lt;code&gt;R&lt;/code&gt; change.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;deployment-and-documentation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Deployment and Documentation&lt;/h2&gt;
&lt;p align=&#34;justify&#34;&gt;
Deploying a Shiny app should feel like a victory lap, not a hurdle race. &lt;code&gt;golem&lt;/code&gt; ensures this by packaging Shiny apps in a deployment-ready format. Be it RStudio Connect, Shinyapps.io, or the containerized world of Docker, your app is prepared and primed to go live.
&lt;/p&gt;
&lt;p align=&#34;justify&#34;&gt;
Now, let‚Äôs talk about something that does not always get the spotlight but is super crucial: documentation. &lt;code&gt;golem&lt;/code&gt; knows how important this is. It is not just about coding; it is about leaving a trail of breadcrumbs for those who will follow in your footsteps. &lt;code&gt;golem&lt;/code&gt; encourages you to document your work thoroughly. Think of it as creating a treasure map for future developers and collaborators who will join your project. Moreover, &lt;code&gt;golem&lt;/code&gt; aligns seamlessly with the &lt;code&gt;roxygen2&lt;/code&gt; style of documentation, familiar to many R developers. This integration means that while you are crafting your Shiny app, you can simultaneously create comprehensive, easy-to-understand documentation. It is like having a dual toolkit - one for building your app and another for creating a clear, helpful guide for any future developer or user who ventures into your code. This approach not only saves time but also ensures that your documentation is as robust and user-friendly as the app you are building.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p align=&#34;justify&#34;&gt;
&lt;code&gt;golem&lt;/code&gt; truly revolutionizes the way we handle R and Shiny applications. It is like having a GPS for the often complex journey of app development, guiding you with a structured, modular approach. This not only simplifies the process but also injects a sense of fun and creativity, much like piecing together a Lego masterpiece.
&lt;/p&gt;
&lt;p align=&#34;justify&#34;&gt;
Beyond just coding, &lt;code&gt;golem&lt;/code&gt; makes deploying apps feel like a victory lap and turns documentation into an integral, rewarding part of the development cycle. With the added bonus of a supportive community, &lt;code&gt;golem&lt;/code&gt; is more than just a tool - it is a companion for any developer venturing into the exciting world of Shiny applications. üöÄüåü
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;p&gt;Fay, Colin, Vincent Guyader, S√©bastien Rochette, and Cervan Girard. 2021. Golem: A Framework for Robust Shiny Applications. &lt;a href=&#34;https://github.com/ThinkR-open/golem&#34; class=&#34;uri&#34;&gt;https://github.com/ThinkR-open/golem&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;additional-material&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Additional Material&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://engineering-shiny.org/golem.html&#34;&gt;Engineering Production-Grade Shiny Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rstudio.github.io/cheatsheets/golem.pdf&#34;&gt;golem: A Framework for Building Robust Shiny Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cran.r-project.org/web/packages/golem/index.html&#34;&gt;golem R package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;citation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Citation&lt;/h1&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;For attribution, please cite this work as:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;div-1&#34;&gt;
&lt;p&gt;Oliveira T.P. (2023, Oct.¬†02). Navigating the Shiny Universe with Golem&lt;/p&gt;
&lt;/div&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;BibTeX citation&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;@misc{oliveira2020golem,
  author = {Oliveira, Thiago},
  title = {Navigating the Shiny Universe with Golem},
  url = {https://prof-thiagooliveira.netlify.app/post/golem-package/},
  year = {2023}
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Did you find this page helpful? Consider sharing it üôå&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R Programming with Efficient Snippets</title>
      <link>https://prof-thiagooliveira.netlify.com/post/r-programming/</link>
      <pubDate>Mon, 02 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://prof-thiagooliveira.netlify.com/post/r-programming/</guid>
      <description>


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p align=&#34;justify&#34;&gt;
In &lt;code&gt;R&lt;/code&gt; programming, efficiency is key. Snippets, small reusable blocks of code, are a cornerstone in achieving this. This post delves into the world of snippets, offering both novice and seasoned &lt;code&gt;R&lt;/code&gt; programmers insights into their power and versatility.
&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;citation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Citation&lt;/h1&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;For attribution, please cite this work as:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;div-1&#34;&gt;
&lt;p&gt;Oliveira T.P. (2024, Jan.¬†06). R Programming with Efficient Snippets&lt;/p&gt;
&lt;/div&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;BibTeX citation&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;@misc{oliveira2020snippets,
  author = {Oliveira, Thiago},
  title = {R Programming with Efficient Snippets},
  url = {https://prof-thiagooliveira.netlify.app/post/r-programming-with-efficient-snippets/},
  year = {2024}
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Did you find this page helpful? Consider sharing it üôå&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
